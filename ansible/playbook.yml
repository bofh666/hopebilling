---
- name: Ensure Python is in place on CentOS 8 host
  hosts: hopebilling
  gather_facts: no
  strategy: linear
  tasks:
    - raw: dnf -y install python36   # Python 3.8 won't work! It's CentOS 8 specific at the moment of writing
    - raw: alternatives --set python /usr/bin/python3

- name: Install HopeBilling on CentOS 8 host
  hosts: hopebilling
  vars:
    percona_release_url: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    percona_mysql_release: ps80
    percona_mysql_root_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65333764656262386466633538636233333234356364666333346666666336323164663164663832
          3036323639396564656235653839623131326132633431640a336139646431623438386466316633
          32616363323465363433353465336239633761346635376533376136666330616237613866653263
          6430306434333266640a326361313664383537343538363963646364336165353637656437363837
          64623564306537373038616364376235306330363434626535666565663839353531
    remi_release_url: https://rpms.remirepo.net/enterprise/remi-release-8.rpm
    remi_php_release: 7.4
  tasks:
    - name: Installing Apache2
      dnf:
        name: httpd
        state: present
        update_cache: yes
    - name: Ensuring Apache2 is enabled and started
      systemd:
        unit: httpd
        state: started
        enabled: yes

    - name: Adding Percona repos
      dnf:
        name: "{{ percona_release_url }}"
        state: present
    - name: Enabling Percona MySQL server {{ percona_mysql_release }} repo
      command: percona-release setup -y {{ percona_mysql_release }}
    - name: Installing Percona MySQL server
      dnf:
        name: percona-server-server
        state: present
    - name: Enabling and starting Percona MySQL server for the first time to get generated root password
      systemd:
        unit: mysqld
        state: started
        enabled: yes
    - name: Getting generated root password
      shell: grep generated /var/log/mysqld.log | awk '{ print $NF }'
      register: percona_mysql_generated_password
    - name: Setting MySQL root password
      command: mysql -u root -p'{{ percona_mysql_generated_password.stdout }}' --connect-expired-password -e "SET PASSWORD = '{{ percona_mysql_root_password }}'"
      no_log: yes
      ignore_errors: yes
    - name: Enabling passwordless MySQL root login for system root user
      template:
        src: .my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0600
    - name: Updating MySQL default configuration
      template:
        src: my.cnf.j2
        dest: /etc/my.cnf
      notify: Restart MySQL

    - name: Adding REMI repos
      dnf:
        name: "{{ remi_release_url }}"
        state: present
    - name: Enabling remi-{{ remi_php_release }} stream of dnf php module
      shell: dnf module reset -y php && dnf module install -y php:remi-{{ remi_php_release }} warn=False
    - name: Installing PHP {{ remi_php_release }} and required modules
      debug:
        msg: Installing PHP {{ remi_php_release }} and required modules


    - name: Ensure unzip is in place
      dnf:
        name: unzip
        state: present
    - name: Download and unpack HopeBilling
      unarchive:
        src: https://github.com/vityabond/hopebilling/archive/master.zip
        remote_src: yes
        creates: /var/www/html/hopebilling-master
        dest: /var/www/html
        group: apache
        owner: apache
    - name: Adding info.php for debug
      copy:
        content: <?php phpinfo(); ?>
        dest: /var/www/html/info.php
        group: apache
        owner: apache

  handlers:
    - name: Restart MySQL
      systemd:
        unit: mysqld
        state: restarted

- name: Create virtual host for HopeBilling on nginx reverse proxy
  hosts: proxy
  gather_facts: no
  tasks:
    - name: Creating Debian-style symlink
      file:
        src: /etc/nginx/sites-available/{{ hostvars[groups['hopebilling'] | first]['ansible_nodename'] }}
        dest: /etc/nginx/sites-enabled/{{ hostvars[groups['hopebilling'] | first]['ansible_nodename'] }}
        state: link
        force: yes
    - name: Generating virtual host configuration
      template:
        src: hopebilling.conf.j2
        dest: /etc/nginx/sites-available/{{ hostvars[groups['hopebilling'] | first]['ansible_nodename'] }}
      notify: Reload nginx
      
  handlers:
    - name: Reload nginx
      systemd:
        unit: nginx
        state: reloaded


###### когда допилю нджинкс, надо будет разобраться с пхп модулями, чтобы апач стал подтягивать пхп как нужно без всяких пхп-фпм
###### сделать так, чтобы скачанный биллинг нормально распаковывался (или симлинкался?) в /var/www/html
