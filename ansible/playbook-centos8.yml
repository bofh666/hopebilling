---
- name: Ensure Python is in place on CentOS 8 host
  hosts: hopebilling
  gather_facts: no
  strategy: linear
  tasks:
    - raw: dnf -y install python36   # Python 3.8 won't work! It's CentOS 8 specific at the moment of writing
    - raw: alternatives --set python /usr/bin/python3

- name: Install HopeBilling on CentOS 8 host
  hosts: hopebilling
  vars:
    percona_release_url: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    percona_mysql_release: ps80
    percona_mysql_root_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65333764656262386466633538636233333234356364666333346666666336323164663164663832
          3036323639396564656235653839623131326132633431640a336139646431623438386466316633
          32616363323465363433353465336239633761346635376533376136666330616237613866653263
          6430306434333266640a326361313664383537343538363963646364336165353637656437363837
          64623564306537373038616364376235306330363434626535666565663839353531
    remi_release_url: https://rpms.remirepo.net/enterprise/remi-release-8.rpm
    remi_php_release: 7.4
  tasks:
    - name: Installing Apache2
      dnf:
        name: httpd
        state: present
        update_cache: yes
    - name: Allowing HTTP traffic
      firewalld:
        immediate: yes
        offline: yes
        permanent: yes
        service: http
        state: enabled
    - name: Removing default Apache2 configs
      file:
        path: /etc/httpd/conf.d/{{ item }}
        state: absent
      with_items:
        - autoindex.conf
        - userdir.conf
        - welcome.conf
      notify: Restarting Apache2

    - name: Adding Percona repos
      dnf:
        name: "{{ percona_release_url }}"
        state: present
    - name: Enabling Percona MySQL server {{ percona_mysql_release }} repo
      command: percona-release setup -y {{ percona_mysql_release }}
    - name: Installing Percona MySQL server
      dnf:
        name: percona-server-server
        state: present
    - name: Enabling and starting Percona MySQL server for the first time to get generated root password
      systemd:
        unit: mysqld
        state: started
        enabled: yes
    - name: Getting generated root password
      shell: grep generated /var/log/mysqld.log | awk '{ print $NF }'
      register: percona_mysql_generated_password
    - name: Setting MySQL root password
      command: mysql -u root -p'{{ percona_mysql_generated_password.stdout }}' --connect-expired-password -e "SET PASSWORD = '{{ percona_mysql_root_password }}'"
      no_log: yes
      ignore_errors: yes
    - name: Enabling passwordless MySQL root login for system root user
      template:
        src: .my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0600
    - name: Updating MySQL default configuration
      template:
        src: my.cnf.j2
        dest: /etc/my.cnf
      notify: Restarting MySQL

    - name: Adding REMI repos
      dnf:
        name: "{{ remi_release_url }}"
        state: present
    - name: Enabling remi-{{ remi_php_release }} stream of dnf php module and installing PHP {{ remi_php_release }}
      shell: dnf module reset -y php && dnf module install -y php:remi-{{ remi_php_release }} warn=False
    - name: Installing required PHP modules
      dnf:
        name:
          - php-pecl-zip
          - php-pdo
          - php-gd
          - php-soap
          - php-mysqlnd
        state: present

    - name: Ensuring unzip is in place
      dnf:
        name: unzip
        state: present
    - name: Downloading and unpacking HopeBilling
      unarchive:
        src: https://github.com/vityabond/hopebilling/archive/master.zip
        remote_src: yes
        dest: /var/www
        keep_newer: yes
        group: apache
        owner: apache
    - name: Weird fix for weird thing
      copy:
        content: ''
        dest: /var/www/hopebilling-master/app/config/global.config
    - name: Some SELinux magic
      command: chcon -t httpd_sys_content_t /var/www/html -R
    - name: Some more SELinux magic
      command: chcon -t httpd_sys_rw_content_t /var/www/html/{{ item }}
      with_items:
        - app/config
        - app/config/global.config
        - app/config/payments.config
        - app/config/sms-gateway.config
        - storage
    - name: Updating Apache2 config to allow .htaccess
      replace:
        path: /etc/httpd/conf/httpd.conf
        regexp: AllowOverride None
        replace: AllowOverride All
      notify: Restarting Apache2
    - name: Creating html symlink
      file:
        src: /var/www/hopebilling-master
        dest: /var/www/html
        state: link
        force: yes
    - name: Enabling short_open_tag in php.ini
      lineinfile:
        path: /etc/php.ini
        regexp: '^short_open_tag'
        state: absent
      notify: Restarting Apache2
    - name: Setting SELinux boolean to allow Apache2 outbound connections
      command: setsebool -P httpd_can_network_connect on

  handlers:
    - name: Restarting Apache2
      systemd:
        unit: httpd
        state: restarted
        enabled: yes
    - name: Restarting MySQL
      systemd:
        unit: mysqld
        state: restarted

- name: Create virtual host for HopeBilling on nginx reverse proxy
  hosts: proxy
  gather_facts: no
  tasks:
    - name: Creating Debian-style symlink
      file:
        src: /etc/nginx/sites-available/{{ hostvars[groups['hopebilling'] | first]['ansible_nodename'] }}
        dest: /etc/nginx/sites-enabled/{{ hostvars[groups['hopebilling'] | first]['ansible_nodename'] }}
        state: link
        force: yes
    - name: Generating nginx virtual host config
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ hostvars[groups['hopebilling'] | first]['ansible_nodename'] }}
      notify: Reload nginx

  handlers:
    - name: Reload nginx
      systemd:
        unit: nginx
        state: reloaded
